{"ast":null,"code":"import{useState,useCallback}from'react';export const useSearch=()=>{const[isLoading,setIsLoading]=useState(false);const[error,setError]=useState(null);const[lastQuery,setLastQuery]=useState('');const performSearch=useCallback(async params=>{setIsLoading(true);setError(null);setLastQuery(params.query);try{// In a real application, this would be an actual API call\n// const response = await axios.get('/api/search', { params });\n// For now, we'll simulate an API call with mock data\nawait new Promise(resolve=>setTimeout(resolve,1000));// Simulate network delay\nconst mockResults=[{id:'1',title:'AstraFind - AI-Powered Search Engine',url:'https://astrafind.com',description:'AstraFind is an advanced AI-powered search engine that uses machine learning to deliver precise and relevant search results. Our intelligent algorithms understand user intent and provide personalized search experiences.',type:'web',timestamp:'2024-01-15',relevance:0.95,tags:['AI','search','machine learning']},{id:'2',title:'Understanding AI Search Algorithms',url:'https://example.com/ai-search',description:'Learn how artificial intelligence is revolutionizing search technology. This comprehensive guide covers the latest developments in AI-powered search algorithms and their applications.',type:'document',timestamp:'2024-01-10',relevance:0.88,tags:['AI','algorithms','technology']},{id:'3',title:'The Future of Search Technology',url:'https://example.com/future-search',description:'Explore the emerging trends in search technology, from voice search to visual search, and how AI is shaping the future of information discovery.',type:'web',timestamp:'2024-01-08',relevance:0.82,tags:['future','technology','trends']},{id:'4',title:'Machine Learning in Search Engines',url:'https://example.com/ml-search',description:'Discover how machine learning algorithms are transforming search engines and improving the accuracy of search results.',type:'web',timestamp:'2024-01-05',relevance:0.78,tags:['machine learning','search','algorithms']},{id:'5',title:'Natural Language Processing for Search',url:'https://example.com/nlp-search',description:'Understanding how natural language processing enhances search capabilities and improves user experience.',type:'document',timestamp:'2024-01-03',relevance:0.75,tags:['NLP','search','AI']}];// Filter results based on search parameters\nlet filteredResults=mockResults;if(params.type&&params.type!=='all'){filteredResults=filteredResults.filter(result=>result.type===params.type);}// Apply pagination\nconst page=params.page||1;const limit=params.limit||10;const startIndex=(page-1)*limit;const endIndex=startIndex+limit;const paginatedResults=filteredResults.slice(startIndex,endIndex);const response={results:paginatedResults,total:filteredResults.length,page,limit,query:params.query};return response;}catch(err){const errorMessage=err instanceof Error?err.message:'An error occurred during search';setError(errorMessage);return null;}finally{setIsLoading(false);}},[]);const clearError=useCallback(()=>{setError(null);},[]);return{performSearch,isLoading,error,lastQuery,clearError};};","map":{"version":3,"names":["useState","useCallback","useSearch","isLoading","setIsLoading","error","setError","lastQuery","setLastQuery","performSearch","params","query","Promise","resolve","setTimeout","mockResults","id","title","url","description","type","timestamp","relevance","tags","filteredResults","filter","result","page","limit","startIndex","endIndex","paginatedResults","slice","response","results","total","length","err","errorMessage","Error","message","clearError"],"sources":["/workspace/frontend/src/hooks/useSearch.ts"],"sourcesContent":["import { useState, useCallback } from 'react';\nimport axios from 'axios';\n\ninterface SearchResult {\n  id: string;\n  title: string;\n  url: string;\n  description: string;\n  type: 'web' | 'image' | 'video' | 'document';\n  timestamp: string;\n  relevance: number;\n  tags: string[];\n}\n\ninterface SearchParams {\n  query: string;\n  type?: string;\n  dateRange?: string;\n  language?: string;\n  region?: string;\n  page?: number;\n  limit?: number;\n}\n\ninterface SearchResponse {\n  results: SearchResult[];\n  total: number;\n  page: number;\n  limit: number;\n  query: string;\n}\n\nexport const useSearch = () => {\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState<string | null>(null);\n  const [lastQuery, setLastQuery] = useState<string>('');\n\n  const performSearch = useCallback(async (params: SearchParams): Promise<SearchResponse | null> => {\n    setIsLoading(true);\n    setError(null);\n    setLastQuery(params.query);\n\n    try {\n      // In a real application, this would be an actual API call\n      // const response = await axios.get('/api/search', { params });\n      \n      // For now, we'll simulate an API call with mock data\n      await new Promise(resolve => setTimeout(resolve, 1000)); // Simulate network delay\n      \n      const mockResults: SearchResult[] = [\n        {\n          id: '1',\n          title: 'AstraFind - AI-Powered Search Engine',\n          url: 'https://astrafind.com',\n          description: 'AstraFind is an advanced AI-powered search engine that uses machine learning to deliver precise and relevant search results. Our intelligent algorithms understand user intent and provide personalized search experiences.',\n          type: 'web',\n          timestamp: '2024-01-15',\n          relevance: 0.95,\n          tags: ['AI', 'search', 'machine learning'],\n        },\n        {\n          id: '2',\n          title: 'Understanding AI Search Algorithms',\n          url: 'https://example.com/ai-search',\n          description: 'Learn how artificial intelligence is revolutionizing search technology. This comprehensive guide covers the latest developments in AI-powered search algorithms and their applications.',\n          type: 'document',\n          timestamp: '2024-01-10',\n          relevance: 0.88,\n          tags: ['AI', 'algorithms', 'technology'],\n        },\n        {\n          id: '3',\n          title: 'The Future of Search Technology',\n          url: 'https://example.com/future-search',\n          description: 'Explore the emerging trends in search technology, from voice search to visual search, and how AI is shaping the future of information discovery.',\n          type: 'web',\n          timestamp: '2024-01-08',\n          relevance: 0.82,\n          tags: ['future', 'technology', 'trends'],\n        },\n        {\n          id: '4',\n          title: 'Machine Learning in Search Engines',\n          url: 'https://example.com/ml-search',\n          description: 'Discover how machine learning algorithms are transforming search engines and improving the accuracy of search results.',\n          type: 'web',\n          timestamp: '2024-01-05',\n          relevance: 0.78,\n          tags: ['machine learning', 'search', 'algorithms'],\n        },\n        {\n          id: '5',\n          title: 'Natural Language Processing for Search',\n          url: 'https://example.com/nlp-search',\n          description: 'Understanding how natural language processing enhances search capabilities and improves user experience.',\n          type: 'document',\n          timestamp: '2024-01-03',\n          relevance: 0.75,\n          tags: ['NLP', 'search', 'AI'],\n        },\n      ];\n\n      // Filter results based on search parameters\n      let filteredResults = mockResults;\n      \n      if (params.type && params.type !== 'all') {\n        filteredResults = filteredResults.filter(result => result.type === params.type);\n      }\n\n      // Apply pagination\n      const page = params.page || 1;\n      const limit = params.limit || 10;\n      const startIndex = (page - 1) * limit;\n      const endIndex = startIndex + limit;\n      const paginatedResults = filteredResults.slice(startIndex, endIndex);\n\n      const response: SearchResponse = {\n        results: paginatedResults,\n        total: filteredResults.length,\n        page,\n        limit,\n        query: params.query,\n      };\n\n      return response;\n    } catch (err) {\n      const errorMessage = err instanceof Error ? err.message : 'An error occurred during search';\n      setError(errorMessage);\n      return null;\n    } finally {\n      setIsLoading(false);\n    }\n  }, []);\n\n  const clearError = useCallback(() => {\n    setError(null);\n  }, []);\n\n  return {\n    performSearch,\n    isLoading,\n    error,\n    lastQuery,\n    clearError,\n  };\n};"],"mappings":"AAAA,OAASA,QAAQ,CAAEC,WAAW,KAAQ,OAAO,CAgC7C,MAAO,MAAM,CAAAC,SAAS,CAAGA,CAAA,GAAM,CAC7B,KAAM,CAACC,SAAS,CAAEC,YAAY,CAAC,CAAGJ,QAAQ,CAAC,KAAK,CAAC,CACjD,KAAM,CAACK,KAAK,CAAEC,QAAQ,CAAC,CAAGN,QAAQ,CAAgB,IAAI,CAAC,CACvD,KAAM,CAACO,SAAS,CAAEC,YAAY,CAAC,CAAGR,QAAQ,CAAS,EAAE,CAAC,CAEtD,KAAM,CAAAS,aAAa,CAAGR,WAAW,CAAC,KAAO,CAAAS,MAAoB,EAAqC,CAChGN,YAAY,CAAC,IAAI,CAAC,CAClBE,QAAQ,CAAC,IAAI,CAAC,CACdE,YAAY,CAACE,MAAM,CAACC,KAAK,CAAC,CAE1B,GAAI,CACF;AACA;AAEA;AACA,KAAM,IAAI,CAAAC,OAAO,CAACC,OAAO,EAAIC,UAAU,CAACD,OAAO,CAAE,IAAI,CAAC,CAAC,CAAE;AAEzD,KAAM,CAAAE,WAA2B,CAAG,CAClC,CACEC,EAAE,CAAE,GAAG,CACPC,KAAK,CAAE,sCAAsC,CAC7CC,GAAG,CAAE,uBAAuB,CAC5BC,WAAW,CAAE,6NAA6N,CAC1OC,IAAI,CAAE,KAAK,CACXC,SAAS,CAAE,YAAY,CACvBC,SAAS,CAAE,IAAI,CACfC,IAAI,CAAE,CAAC,IAAI,CAAE,QAAQ,CAAE,kBAAkB,CAC3C,CAAC,CACD,CACEP,EAAE,CAAE,GAAG,CACPC,KAAK,CAAE,oCAAoC,CAC3CC,GAAG,CAAE,+BAA+B,CACpCC,WAAW,CAAE,yLAAyL,CACtMC,IAAI,CAAE,UAAU,CAChBC,SAAS,CAAE,YAAY,CACvBC,SAAS,CAAE,IAAI,CACfC,IAAI,CAAE,CAAC,IAAI,CAAE,YAAY,CAAE,YAAY,CACzC,CAAC,CACD,CACEP,EAAE,CAAE,GAAG,CACPC,KAAK,CAAE,iCAAiC,CACxCC,GAAG,CAAE,mCAAmC,CACxCC,WAAW,CAAE,kJAAkJ,CAC/JC,IAAI,CAAE,KAAK,CACXC,SAAS,CAAE,YAAY,CACvBC,SAAS,CAAE,IAAI,CACfC,IAAI,CAAE,CAAC,QAAQ,CAAE,YAAY,CAAE,QAAQ,CACzC,CAAC,CACD,CACEP,EAAE,CAAE,GAAG,CACPC,KAAK,CAAE,oCAAoC,CAC3CC,GAAG,CAAE,+BAA+B,CACpCC,WAAW,CAAE,wHAAwH,CACrIC,IAAI,CAAE,KAAK,CACXC,SAAS,CAAE,YAAY,CACvBC,SAAS,CAAE,IAAI,CACfC,IAAI,CAAE,CAAC,kBAAkB,CAAE,QAAQ,CAAE,YAAY,CACnD,CAAC,CACD,CACEP,EAAE,CAAE,GAAG,CACPC,KAAK,CAAE,wCAAwC,CAC/CC,GAAG,CAAE,gCAAgC,CACrCC,WAAW,CAAE,0GAA0G,CACvHC,IAAI,CAAE,UAAU,CAChBC,SAAS,CAAE,YAAY,CACvBC,SAAS,CAAE,IAAI,CACfC,IAAI,CAAE,CAAC,KAAK,CAAE,QAAQ,CAAE,IAAI,CAC9B,CAAC,CACF,CAED;AACA,GAAI,CAAAC,eAAe,CAAGT,WAAW,CAEjC,GAAIL,MAAM,CAACU,IAAI,EAAIV,MAAM,CAACU,IAAI,GAAK,KAAK,CAAE,CACxCI,eAAe,CAAGA,eAAe,CAACC,MAAM,CAACC,MAAM,EAAIA,MAAM,CAACN,IAAI,GAAKV,MAAM,CAACU,IAAI,CAAC,CACjF,CAEA;AACA,KAAM,CAAAO,IAAI,CAAGjB,MAAM,CAACiB,IAAI,EAAI,CAAC,CAC7B,KAAM,CAAAC,KAAK,CAAGlB,MAAM,CAACkB,KAAK,EAAI,EAAE,CAChC,KAAM,CAAAC,UAAU,CAAG,CAACF,IAAI,CAAG,CAAC,EAAIC,KAAK,CACrC,KAAM,CAAAE,QAAQ,CAAGD,UAAU,CAAGD,KAAK,CACnC,KAAM,CAAAG,gBAAgB,CAAGP,eAAe,CAACQ,KAAK,CAACH,UAAU,CAAEC,QAAQ,CAAC,CAEpE,KAAM,CAAAG,QAAwB,CAAG,CAC/BC,OAAO,CAAEH,gBAAgB,CACzBI,KAAK,CAAEX,eAAe,CAACY,MAAM,CAC7BT,IAAI,CACJC,KAAK,CACLjB,KAAK,CAAED,MAAM,CAACC,KAChB,CAAC,CAED,MAAO,CAAAsB,QAAQ,CACjB,CAAE,MAAOI,GAAG,CAAE,CACZ,KAAM,CAAAC,YAAY,CAAGD,GAAG,WAAY,CAAAE,KAAK,CAAGF,GAAG,CAACG,OAAO,CAAG,iCAAiC,CAC3FlC,QAAQ,CAACgC,YAAY,CAAC,CACtB,MAAO,KAAI,CACb,CAAC,OAAS,CACRlC,YAAY,CAAC,KAAK,CAAC,CACrB,CACF,CAAC,CAAE,EAAE,CAAC,CAEN,KAAM,CAAAqC,UAAU,CAAGxC,WAAW,CAAC,IAAM,CACnCK,QAAQ,CAAC,IAAI,CAAC,CAChB,CAAC,CAAE,EAAE,CAAC,CAEN,MAAO,CACLG,aAAa,CACbN,SAAS,CACTE,KAAK,CACLE,SAAS,CACTkC,UACF,CAAC,CACH,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}