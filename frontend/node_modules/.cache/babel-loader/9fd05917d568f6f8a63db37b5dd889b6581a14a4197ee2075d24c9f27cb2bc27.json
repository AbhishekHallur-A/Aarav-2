{"ast":null,"code":"import{useState,useCallback}from'react';export const useVoiceSearch=()=>{const[isListening,setIsListening]=useState(false);const[transcript,setTranscript]=useState('');const startListening=useCallback(()=>{setIsListening(true);// TODO: Implement actual voice recognition\nconsole.log('Voice recognition started');},[]);const stopListening=useCallback(()=>{setIsListening(false);// TODO: Implement actual voice recognition stop\nconsole.log('Voice recognition stopped');},[]);return{isListening,transcript,startListening,stopListening,setTranscript};};","map":{"version":3,"names":["useState","useCallback","useVoiceSearch","isListening","setIsListening","transcript","setTranscript","startListening","console","log","stopListening"],"sources":["/workspace/frontend/src/hooks/useVoiceSearch.ts"],"sourcesContent":["import { useState, useCallback } from 'react';\n\nexport const useVoiceSearch = () => {\n  const [isListening, setIsListening] = useState(false);\n  const [transcript, setTranscript] = useState('');\n\n  const startListening = useCallback(() => {\n    setIsListening(true);\n    // TODO: Implement actual voice recognition\n    console.log('Voice recognition started');\n  }, []);\n\n  const stopListening = useCallback(() => {\n    setIsListening(false);\n    // TODO: Implement actual voice recognition stop\n    console.log('Voice recognition stopped');\n  }, []);\n\n  return {\n    isListening,\n    transcript,\n    startListening,\n    stopListening,\n    setTranscript\n  };\n};"],"mappings":"AAAA,OAASA,QAAQ,CAAEC,WAAW,KAAQ,OAAO,CAE7C,MAAO,MAAM,CAAAC,cAAc,CAAGA,CAAA,GAAM,CAClC,KAAM,CAACC,WAAW,CAAEC,cAAc,CAAC,CAAGJ,QAAQ,CAAC,KAAK,CAAC,CACrD,KAAM,CAACK,UAAU,CAAEC,aAAa,CAAC,CAAGN,QAAQ,CAAC,EAAE,CAAC,CAEhD,KAAM,CAAAO,cAAc,CAAGN,WAAW,CAAC,IAAM,CACvCG,cAAc,CAAC,IAAI,CAAC,CACpB;AACAI,OAAO,CAACC,GAAG,CAAC,2BAA2B,CAAC,CAC1C,CAAC,CAAE,EAAE,CAAC,CAEN,KAAM,CAAAC,aAAa,CAAGT,WAAW,CAAC,IAAM,CACtCG,cAAc,CAAC,KAAK,CAAC,CACrB;AACAI,OAAO,CAACC,GAAG,CAAC,2BAA2B,CAAC,CAC1C,CAAC,CAAE,EAAE,CAAC,CAEN,MAAO,CACLN,WAAW,CACXE,UAAU,CACVE,cAAc,CACdG,aAAa,CACbJ,aACF,CAAC,CACH,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}